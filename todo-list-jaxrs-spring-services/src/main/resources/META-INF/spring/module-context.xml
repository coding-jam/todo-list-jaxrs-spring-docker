<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<batch:job id="ida-commissioning">
		<batch:step id="ida-commissioning-step">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="eventsDataReader" processor="idaCommissioningProcessor"
					writer="epcisIdaServerWriter" commit-interval="1" processor-transactional="false"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<batch:job id="ida-commissioning-bulk">
		<batch:step id="ida-commissioning-step-bulk">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="eventsDataBulkReader" processor="idaCommissioningBulkProcessor"
					writer="epcisIdaServerBulkWriter" commit-interval="1" processor-transactional="false"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<batch:job id="ida-decommissioning">
		<batch:step id="ida-decommissioning-step">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="eventsDataReader" processor="idaDecommissioningProcessor"
					writer="epcisIdaServerWriter" commit-interval="1" processor-transactional="false"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<batch:job id="ida-decommissioning-bulk">
		<batch:step id="ida-decommissioning-step-bulk">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="eventsDataBulkReader" processor="idaDecommissioningBulkProcessor"
					writer="epcisIdaServerBulkWriter" commit-interval="1" processor-transactional="false"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- Job DEPRECATO perchÃ© usa la query interface epcis -->
	<batch:job id="bi-commissioning-epcis-query">
		<batch:step id="bi-commissioning-epcis-query-step">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="eventListTypeQueryReader"
					processor="biQueryResultsAdapter" writer="biEPCISEventTypeWriter"
					commit-interval="1" processor-transactional="false"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<!-- shipping: Job che sfrutta le query da db -->
	<batch:job id="bi-commissioning-db-query">
		<batch:step id="bi-commissioning-db-query-step">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="listOfEventDataQueryReader"
					processor="biQueryResultsFromDbAdapter" writer="biEPCISEventTypeWriter"
					commit-interval="1" processor-transactional="false"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<batch:job id="bi-reconciliation">
		<batch:step id="bi-reconciliation-step">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="eventListTypeQueryReader"
					processor="reconciliationProcessor" writer="reconcilationWriter"
					commit-interval="1" processor-transactional="false"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="epcisIdaServerWriter"
		class="com.ida.pharma.epcis.serialization.batch.writers.EpcisServerWriter"
		scope="job">
		<property name="epcisServerService" ref="epcisIdaServerService" />
	</bean>
	
	<bean id="epcisIdaServerBulkWriter"
		class="com.ida.pharma.epcis.serialization.batch.writers.EpcisServerBulkWriter"
		scope="job">
		<property name="epcisServerService" ref="epcisIdaServerService" />
	</bean>

	<bean id="biEPCISEventTypeWriter"
		class="com.ida.pharma.epcis.serialization.batch.writers.CustomerEPCISEventTypeWriter"
		scope="step">
		<property name="interfaceService" ref="boehrigerInterfaceService" />
		<property name="enablePagination" value="true"></property>
	</bean>

	<bean id="idaCommissioningProcessor"
		class="com.ida.pharma.epcis.serialization.batch.processors.EventDataProcessor"
		scope="job">
		<property name="dataProvider" ref="eventDataCommissioning" />
		<property name="jobParameter" value="#{jobParameters['actionType']}" />
	</bean>
	
	<bean id="idaCommissioningBulkProcessor"
		class="com.ida.pharma.epcis.serialization.batch.processors.EventsDataBulkProcessor"
		scope="job">
		<property name="dataProvider" ref="eventDataCommissioning" />
		<property name="jobParameter" value="#{jobParameters['actionType']}" />
	</bean>

	<bean id="idaDecommissioningProcessor"
		class="com.ida.pharma.epcis.serialization.batch.processors.EventDataProcessor"
		scope="job">
		<property name="dataProvider" ref="eventDataDecommissioning" />
		<property name="jobParameter" value="#{jobParameters['actionType']}" />
	</bean>
	
	<bean id="idaDecommissioningBulkProcessor"
		class="com.ida.pharma.epcis.serialization.batch.processors.EventsDataBulkProcessor"
		scope="job">
		<property name="dataProvider" ref="eventDataDecommissioning" />
		<property name="jobParameter" value="#{jobParameters['actionType']}" />
	</bean>

	<bean id="biQueryResultsAdapter"
		class="com.ida.pharma.epcis.serialization.batch.processors.ToEPCISEventTypeProcessor"
		scope="job">
		<property name="adapter" ref="boehringerCommissioning" />
	</bean>
	
	<bean id="biQueryResultsFromDbAdapter"
		class="com.ida.pharma.epcis.serialization.batch.processors.ToEPCISEventTypeProcessor"
		scope="job">
		<property name="adapter" ref="boehringerCommissioningFromDb" />
	</bean>

	<bean id="reconcilationWriter"
		class="com.ida.pharma.epcis.serialization.boehringer.writers.ReconcilationWriter"
		scope="job">
		<property name="interfaceService" ref="boehrigerReconciliationInterfaceService" />
	</bean>

</beans>
